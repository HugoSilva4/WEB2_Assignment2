{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guiom\\\\Documents\\\\GitHub\\\\WEB2_Assignment2\\\\Web2_Assignment2\\\\pokedex\\\\src\\\\components\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPokemonData, getPokemons } from \"./Datafetch\";\nimport Pokedex from \"./Pokedex\";\nimport Header from \"./Header\";\nimport \"../Homepage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [notFound, setNotFound] = useState(false);\n  const fetchPokemons = async () => {\n    try {\n      setLoading(true);\n      const data = await getPokemons(20, 20 * page);\n      const promises = data.results.map(async pokemon => {\n        return await getPokemonData(pokemon.url);\n      });\n      const results = await Promise.all(promises);\n      setPokemons(results);\n      setLoading(false);\n      setTotal(Math.ceil(data.count / 25));\n      setNotFound(false);\n    } catch (err) {}\n  };\n  useEffect(() => {\n    fetchPokemons();\n    /*if (!searching) {\r\n      fetchPokemons();\r\n    }*/\n  }, [page]);\n  return (\n    /*#__PURE__*/\n    //<SearchBar onSearch={onSearch} />\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), notFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"not-found-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sorry, Pokemon not found! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Pokedex, {\n        pokemons: pokemons,\n        page: page,\n        setPage: setPage,\n        total: total,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n/*const Div = styled.div`\r\n  text-align: center;\r\n  font-size: 1.25rem;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n  @media (max-width: 1200px) and (min-width: 769px) {\r\n    display: flex;\r\n  }\r\n`;*/\n\n/*const Img = styled.img`\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;*/\n_s(Home, \"A+yuSe26bKU2jLgDC3rFcptODPQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","getPokemonData","getPokemons","Pokedex","Header","jsxDEV","_jsxDEV","Home","_s","pokemons","setPokemons","page","setPage","total","setTotal","loading","setLoading","notFound","setNotFound","fetchPokemons","data","promises","results","map","pokemon","url","Promise","all","Math","ceil","count","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","alt","_c","$RefreshReg$"],"sources":["C:/Users/guiom/Documents/GitHub/WEB2_Assignment2/Web2_Assignment2/pokedex/src/components/Homepage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getPokemonData, getPokemons } from \"./Datafetch\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport Header from \"./Header\";\r\nimport \"../Homepage.css\";\r\n\r\nfunction Home() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  const fetchPokemons = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await getPokemons(20, 20 * page);\r\n\r\n      const promises = data.results.map(async (pokemon) => {\r\n        return await getPokemonData(pokemon.url);\r\n      });\r\n      const results = await Promise.all(promises);\r\n      setPokemons(results);\r\n      setLoading(false);\r\n      setTotal(Math.ceil(data.count / 25));\r\n      setNotFound(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPokemons();\r\n    /*if (!searching) {\r\n      fetchPokemons();\r\n    }*/\r\n  }, [page]);\r\n\r\n  return (\r\n    //<SearchBar onSearch={onSearch} />\r\n    <div>\r\n      <Header />\r\n      \r\n      {notFound ? (\r\n        <div className=\"not-found-text\">\r\n          <h1>Sorry, Pokemon not found! </h1>\r\n          <img alt=\"loading...\" />\r\n        </div>\r\n      ) : (\r\n        <Pokedex\r\n          pokemons={pokemons}\r\n          page={page}\r\n          setPage={setPage}\r\n          total={total}\r\n          loading={loading}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/*const Div = styled.div`\r\n  text-align: center;\r\n  font-size: 1.25rem;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n  @media (max-width: 1200px) and (min-width: 769px) {\r\n    display: flex;\r\n  }\r\n`;*/\r\n\r\n/*const Img = styled.img`\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;*/\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}